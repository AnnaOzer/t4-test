Как работать с базой данных
с помощью моделей
модель специальный класс, который  соответствует таблице и записям в этой таблице

в фреймворке реализована Orm
объектам БД ставятся в соответствие объекты языка Php

создадим папку Models
где будем хранить классы отвечающие за конкретные данные
класс унаследовать от Model
в статической переменной прописать схему

в базу в persons добавить людей вручную
Иван Иванов 42
Екатерина Сидорова 18
Петр Петров 25

Название таблицы строится так:
имя класс к нижнему регистру и s вконце
Person::findAll()
возвращает коллекцию объектов класса Person

нигде в классе не описывали, какие будут свойства у объектов,
свойства вывелись автоматически из описания схемы в базе

в т4 статическими методами сделаны те, которые для работы с таблицей в целом
не нужно создавать человека, чтобы найти другого человека
то, что работает к конкретной записью - динамические свойства и объекты

класс Model наследуется от стандартного класса
метод isNew() true до save
wasNew() если модель была ранее в этом коде создана а не получена из базы
от Std наследуется fromArray toArray

__id соглашение названия служебных полей начинать с __
чтобы отличать от информационных

Вторая доктрина и концепция дата маппер
объекты данных не активны, пассивны
они контейнеры для данных
есть энтити менеджер,
который управляет синхронизацией с бд

$person1 = Person::findByPk(3);
$person2 = Person::findByPk(3);
в бд это один и тот же человек
в т4 это будут 2 разных объекта
их можно независимо измениь, сохранить, что будет неясно
во 2 доктрине это будет один и тот же объект
(чаще всего код на php не многопоточный)

теперь можем делать CRUD с моделью
$person->delete()
при этом не удаляется объект из памяти
isDeleted() а не удаленная ли это запись